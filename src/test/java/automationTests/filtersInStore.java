package automationTests;

//Generated by Selenium IDE
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.Test;
import org.junit.internal.TextListener;
import org.junit.runner.JUnitCore;
import org.junit.Before;
import static org.junit.Assert.*;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import pages.BaseTestClass;
import pages.ProductPage;
import pages.StorePage;

public class filtersInStore {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    private Logger logger;
    private JSONArray items;
    private BaseTestClass baseTestClass;

    @Before
    public void setUp() throws IOException {
        driver = baseTestClass.initializeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        logger = LogManager.getLogger(filtersInStore.class);
        logger.info("opening webiste");

        try {
            JSONParser jsonParser = new JSONParser();
            FileReader reader;
            reader = new FileReader("filterItem.json");
            //Read JSON file
            items = (JSONArray)jsonParser.parse(reader);

        } catch (FileNotFoundException | ParseException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void FilterBySearchOfName() {
        // Test: filter the items by search products box
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://atid.store/");
        // 2 | setWindowSize | 1052x666 |
        driver.manage().window().setSize(new Dimension(1052, 666));
        for (int i = 0; i < items.size(); i++) {
            JSONObject obj = (JSONObject) items.get(i);
            //go to store
            logger.debug("go to store");
            StorePage storePage = new StorePage(driver);
            storePage.clickStoreBtn();         // enter the store
            //search for all items
            logger.debug("search for all items");
            storePage.getTextBox().sendKeys((String)obj.get("item"));
            //click enter
            logger.debug("click enter");
            storePage.clickEnterBtn();
            ProductPage productPage = new ProductPage(driver);
            List<WebElement> products = productPage.findAllProduct();
            Iterator<WebElement> itr_names = products.iterator();
            while (itr_names.hasNext()) {
                if (!itr_names.next().getText().contains((String)obj.get("searchResult")))
                    fail();
            }
        }
    }

    @Test
    public void FilterByCategory() {
        // Test: filter the items by category name
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://atid.store/");
        // 2 | setWindowSize | 1052x666 |
        driver.manage().window().setSize(new Dimension(1052, 666));
        //go to store
        logger.debug("go to store");
        StorePage storePage = new StorePage(driver);
        storePage.clickStoreBtn();         // enter the store
        //select accessories category
        logger.debug("select accessories category");
        storePage.clickAccessoriesBtn();;
        //check if it gets to the right page
        logger.debug("check if it gets to the right page");
        assertEquals("https://atid.store/product-category/accessories/", driver.getCurrentUrl());

    }

    @Test
    public void SortByPriceLowToHigh() {
        // Test: sort the items from low to high
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("https://atid.store/");
        // 2 | setWindowSize | 1052x666 |
        driver.manage().window().setSize(new Dimension(1052, 666));
        //go to store
        logger.debug("go to store");
        StorePage storePage = new StorePage(driver);
        storePage.clickStoreBtn();         // enter the store
        //select sorting method - low to high
        logger.debug("select sorting method - low to high");
        storePage.clickSortingMethod();
        //locate the cheapest item
        logger.debug("locate the cheapest item");
        ProductPage productPage = new ProductPage(driver);
        String price = productPage.clickFirstProduct();
        List<WebElement> products_prices = productPage.FindProductsPrices();
        Iterator<WebElement> itr_prices = products_prices.iterator();
        while (itr_prices.hasNext()) {
            if (Integer.parseInt(itr_prices.next().getText()) < Integer.parseInt(price))
                fail();
        }
    }

    public static void main(String args[]) {
        JUnitCore junit = new JUnitCore();
        junit.addListener(new TextListener(System.out));
        org.junit.runner.Result result = junit.run(updateCart.class); // Replace "SampleTest" with the name of your class
        if (result.getFailureCount() > 0) {
            System.out.println("Test failed.");
            System.exit(1);
        } else {
            System.out.println("Test finished successfully.");
            System.exit(0);
        }
    }
}
